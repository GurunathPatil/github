{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.scss","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/home/home.component.html","webpack:///./src/app/home/home.component.scss","webpack:///./src/app/home/home.component.ts","webpack:///./src/app/ipaddress/ipaddress.component.html","webpack:///./src/app/ipaddress/ipaddress.component.scss","webpack:///./src/app/ipaddress/ipaddress.component.ts","webpack:///./src/app/ipaddress/ipadress.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { HomeComponent } from './home/home.component';\nimport { IpaddressComponent } from './ipaddress/ipaddress.component';\n\nconst routes: Routes = [\n  // {path: '' , redirectTo: '/home',pathMatch: 'full'},\n  {path: 'home',component: HomeComponent},\n  {path: 'ip', component: IpaddressComponent}\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule {\n\n }\n","module.exports = \"\\n\\n<router-outlet></router-outlet>\\n\\n\\n\\n<p> line 1 {{name}}</p>\\n<p>line 2 - <input type='text' [(ngModel)]='name'></p>\\n<p>line 3 - {{name}}</p>\"","module.exports = \"\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'githubproject-name';\npublic name = \"guru\";\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { HomeComponent } from './home/home.component';\nimport { IpaddressComponent } from './ipaddress/ipaddress.component';\nimport { IpService } from './ipaddress/ipadress.service';\nimport {FormsModule} from '@angular/forms';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HomeComponent,\n    IpaddressComponent\n  ],\n  imports: [\n    FormsModule,\n    BrowserModule,\n    HttpClientModule,\n    AppRoutingModule\n  ],\n  providers: [IpService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \"<table>\\n  <tr>\\n    <th *ngFor=\\\"let element of tdHeaders\\\">{{element}}</th>\\n  </tr>\\n\\n  <tr *ngFor=\\\"let user of users\\\" (click) = loadAllData(user)>\\n    <td>\\n      {{ user.login }}\\n    </td>\\n    <td>\\n      {{user.id}}\\n\\n    </td>\\n  <td>\\n    {{user.node_id}}\\n  </td>\\n  <td>\\n    {{user.avatar_url}}\\n  </td>\\n\\n  <td>\\n    {{gravatar_id}}\\n  </td>\\n\\n  </tr>\\n</table>\\n\\n\"","module.exports = \"th {\\n  border-style: solid; }\\n\"","import { Component, OnInit } from '@angular/core';\nimport { HttpClient }from '@angular/common/http';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.scss']\n})\nexport class HomeComponent implements OnInit {\n  public name = \"guru\";\n\n \n  users = [] as any;\nconstructor(private http:HttpClient){ }\n\n  ngOnInit() {\n    this.getGithubUsers(this.users);\n\n    this.gethubUsersUsingAngular()\n    .subscribe(response=> {\n      \n\n      console.log(response);\n      this.users = response;\n    });\n\n  }\n\n  getGithubUsers(users){\n    return fetch(\"https://api.github.com/users\")\n    .then(function(responce){\n      return responce.json()\n\n    })\n    .then(function(body){\n      console.log(body)\n     \n      users = [] as any; \n      //return body\n    })\n  }\ngethubUsersUsingAngular(){\n  return this.http.get(\"http://api.github.com/users\");\n}\n\n\n  tdHeaders = [\"Login\",'id',\"node_id\",\"avatar_url\",\"gravatar_id\",\"url\", \"html_url\",\"html_url\", \"followers_url\", \"following_url\",\"gists_url\", \"starred_url\", \"subscriptions_url\", \"organizations_url\", \"repos_url\", \"events_url\", \"received_events_url\", \"type\",\"site_admin\"]\n\n}\n","module.exports = \"<p>\\n  ipaddress works!\\n</p>\\n<p>\\n{{data.city}}\\n</p>\\n<p>\\n  {{data.as}}\\n</p>\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\nimport {IpService} from './ipadress.service';\n@Component({\n  selector: 'app-ipaddress',\n  templateUrl: './ipaddress.component.html',\n  styleUrls: ['./ipaddress.component.scss']\n})\nexport class IpaddressComponent implements OnInit {\n\n  constructor(private ipService:IpService) { }\n  data = {}\n  ngOnInit() {\n    this.\n    ipService.getIpadress()\n .subscribe((result: any) =>{\n   console.log(result.ip);\n   \n   this.\n   ipService.getGeoloction(result.ip)\n   .subscribe((results) =>{\n     console.log(results);\n     this.data = results;\n   });\n });\n}\n\n}\n","import { Component, OnInit, Injectable } from '@angular/core';\r\nimport { HttpClient }from '@angular/common/http';\r\n\r\n@Injectable() \r\nexport class IpService {\r\n    \r\n    constructor(private http:HttpClient){\r\n\r\n\r\n    }\r\n    getIpadress(){\r\n        return this.http.get(\"https://jsonip.com/\");\r\n      }\r\n      getGeoloction(ip:string){\r\n          return this.http.get(\"http://ip-api.com/json/\"+ip);\r\n      }\r\n      \r\n}\r\n\r\n\r\n\r\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}